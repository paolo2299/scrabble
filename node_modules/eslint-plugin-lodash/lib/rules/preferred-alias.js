/**
 * @fileoverview Rule to ensure consistency of aliases of lodash methods
 */
'use strict';

/**
 * @fileoverview Rule to ensure consistency of aliases of lodash methods
 */
//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = {
    meta: {},

    create: function create(context) {
        var _require = require('../util/lodashUtil');

        var getLodashMethodVisitors = _require.getLodashMethodVisitors;

        var _require$getSettings = require('../util/settingsUtil').getSettings(context);

        var version = _require$getSettings.version;

        var aliases = require('../util/methodDataUtil').getAliasesByVersion(version);
        var has = require('lodash/has');

        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {
            var method = _ref.method;

            if (has(aliases, method)) {
                context.report({
                    node: node,
                    message: 'Method \'' + method + '\' is an alias, for consistency prefer using \'' + aliases[method] + '\''
                });
            }
        });
    }
};